const { REST, Routes, SlashCommandBuilder, PermissionFlagsBits } = require('discord.js');
require('dotenv').config();

const commands = [
    new SlashCommandBuilder()
        .setName('attaque-perco')
        .setDescription("Lancer une attaque sur un percepteur")
        .addIntegerOption(option => 
            option.setName('difficulte')
                .setDescription('Nombre de dÃ©fenseurs sur le percepteur')
                .setRequired(true)
                .addChoices(
                    { name: '0 dÃ©fenseur', value: 0 },
                    { name: '1 dÃ©fenseur', value: 1 },
                    { name: '2 dÃ©fenseurs', value: 2 },
                    { name: '3 dÃ©fenseurs', value: 3 },
                    { name: '4 dÃ©fenseurs', value: 4 },
                    { name: '5 dÃ©fenseurs', value: 5 },
                ))
        .addStringOption(option => 
            option.setName('victoire')
                .setDescription('Victoire ou dÃ©faite ? (oui/non)')
                .setRequired(true)
                .addChoices(
                    { name: 'Victoire', value: 'oui' },
                    { name: 'DÃ©faite', value: 'non' }
                ))
        .addAttachmentOption(option => 
            option.setName('screenshot')
                .setDescription('Ajoute un screenshot de lâ€™attaque')
                .setRequired(true))
        .addUserOption(option => 
            option.setName('joueur1')
                .setDescription('Premier joueur impliquÃ©')
                .setRequired(true))
        .addUserOption(option => 
            option.setName('joueur2')
                .setDescription('DeuxiÃ¨me joueur impliquÃ©')
                .setRequired(false))
        .addUserOption(option => 
            option.setName('joueur3')
                .setDescription('TroisiÃ¨me joueur impliquÃ©')
                .setRequired(false))
        .addUserOption(option => 
            option.setName('joueur4')
                .setDescription('QuatriÃ¨me joueur impliquÃ©')
                .setRequired(false))
        .addUserOption(option => 
            option.setName('joueur5')
                .setDescription('CinquiÃ¨me joueur impliquÃ©')
                .setRequired(false)),

    new SlashCommandBuilder()
        .setName('defense-perco')
        .setDescription("DÃ©fendre un percepteur")
        .addIntegerOption(option => 
            option.setName('attaquants')
                .setDescription('Nombre dâ€™attaquants sur le percepteur')
                .setRequired(true)
                .addChoices(
                    { name: '1 attaquant', value: 1 },
                    { name: '2 attaquants', value: 2 },
                    { name: '3 attaquants', value: 3 },
                    { name: '4 attaquants', value: 4 },
                    { name: '5 attaquants', value: 5 },
                ))
        .addStringOption(option => 
            option.setName('victoire')
                .setDescription('Victoire ou dÃ©faite ? (oui/non)')
                .setRequired(true)
                .addChoices(
                    { name: 'Victoire', value: 'oui' },
                    { name: 'DÃ©faite', value: 'non' }
                ))
        .addAttachmentOption(option => 
            option.setName('screenshot')
                .setDescription('Ajoute un screenshot de la dÃ©fense')
                .setRequired(true))
        .addUserOption(option => 
            option.setName('joueur1')
                .setDescription('Premier joueur impliquÃ©')
                .setRequired(true))
        .addUserOption(option => 
            option.setName('joueur2')
                .setDescription('DeuxiÃ¨me joueur impliquÃ©')
                .setRequired(false))
        .addUserOption(option => 
            option.setName('joueur3')
                .setDescription('TroisiÃ¨me joueur impliquÃ©')
                .setRequired(false))
        .addUserOption(option => 
            option.setName('joueur4')
                .setDescription('QuatriÃ¨me joueur impliquÃ©')
                .setRequired(false))
        .addUserOption(option => 
            option.setName('joueur5')
                .setDescription('CinquiÃ¨me joueur impliquÃ©')
                .setRequired(false)),

    // Commande pour rÃ©initialiser le ladder (Admin uniquement)
    new SlashCommandBuilder()
        .setName('reset-ladder')
        .setDescription('ðŸ”„ RÃ©initialise complÃ¨tement le ladder.')
        .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages),

    // Commande pour ajouter des points Ã  un joueur (Admin uniquement)
    new SlashCommandBuilder()
        .setName('ajouter-points')
        .setDescription('âž• Ajoute des points Ã  un joueur.')
        .addUserOption(option => option.setName('joueur').setDescription('SÃ©lectionnez un joueur').setRequired(true))
        .addIntegerOption(option => option.setName('points').setDescription('Nombre de points Ã  ajouter').setRequired(true))
        .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages),

    // Commande pour retirer des points Ã  un joueur (Admin uniquement)
    new SlashCommandBuilder()
        .setName('retirer-points')
        .setDescription('âž– Retire des points Ã  un joueur.')
        .addUserOption(option => option.setName('joueur').setDescription('SÃ©lectionnez un joueur').setRequired(true))
        .addIntegerOption(option => option.setName('points').setDescription('Nombre de points Ã  retirer').setRequired(true))
        .setDefaultMemberPermissions(PermissionFlagsBits.ManageMessages)
].map(command => command.toJSON());

const rest = new REST({ version: '10' }).setToken(process.env.TOKEN);

(async () => {
    try {
        console.log('ðŸš€ DÃ©ploiement des commandes...');
        await rest.put(Routes.applicationGuildCommands(process.env.APPLICATION_ID, process.env.GUILD_ID), { body: commands });
        console.log('âœ… Commandes enregistrÃ©es !');
    } catch (error) {
        console.error(error);
    }
})();
